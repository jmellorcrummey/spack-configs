#  CUSTOMIZED for ppc64le at sandia
#
#  packages.yaml
#
#  This file specifies the versions and variants for HPCToolkit's
#  dependency packages and serves as a common reference point for how
#  to build them.  It also specifies the paths or modules for system
#  build tools (cmake, python, etc) to avoid rebuilding them.
#
#  Put this file in one of spack's configuration scope directories,
#  normally either <spack-root>/etc/spack, or else in its own,
#  separate directory (and then use 'spack -C dir').
#
#  There are two main sections: (1) hpctoolkit dependency specs,
#  and (2) system build tools: cmake, perl, python, MPI and GCC.
#
#  See also:
#    https://spack.readthedocs.io/en/latest/basic_usage.html#specs-dependencies
#    https://spack.readthedocs.io/en/latest/build_settings.html
#
packages:
  all:
    target: ['x86_64','ppc64le']

  # cuda -- nvidia cuda, now used in master.
  #
  # If there is a pre-built cuda for the system, then it may be better
  # to use that with a 'paths:' or 'modules:' entry.
  #
  # If installing here, then use >= 10.1 and check that the cuda
  # system drivers are installed.
  #
  cuda:
    modules:
      cuda@10.1.243:  cuda/10.1.243
    buildable: False


  # dyninst -- used in hpcstruct for line map info, inline sequences
  # and loop analysis.
  #
  # Need >= 10.1.0 for full cuda CFG support.
  # On Blue Gene, with default gcc 4.4 compilers, use version 9.3.2.
  #
  # +openmp is to support openmp threads in parseapi.
  #
  # dyninst:
  #   version:  [develop]
  #   variants: +openmp build_type=RelWithDebInfo

  #------------------------------------------------------------

  # MPI -- hpctoolkit always supports profiling MPI applications.
  # Adding MPI here is only for building hpcprof-mpi, the MPI version
  # of hpcprof.
  #
  # Normally, you want MPI from a module (mpich, mvapich, openmpi)
  # that was built for the correct interconnect system for the compute
  # nodes.  Also, for hpcprof-mpi, MPI should be built with GNU
  # gcc/g++ and the same version used to build hpctoolkit (to keep the
  # C++ libraries in sync).
  #
  openmpi:
    modules:
      openmpi: spectrum-mpi/rolling-release
    buildable: False
